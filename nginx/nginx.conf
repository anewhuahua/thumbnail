
#user  nobody;
# worker_processes  1;

#error_log  logs/error.log;
error_log stderr notice;
daemon off;
events { }
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

worker_processes    4;
worker_cpu_affinity 0001 0010 0100 1000;


http {
    include /var/projs/openresty/conf/mime.types;
    lua_package_path "/var/projs/openresty/lua/?.lua;;";
    lua_package_cpath "/var/projs/openresty/clua/?.so;;";

    # access_log /dev/stdout;
    # rewrite_log on;

    proxy_cache_path /data/nginx/proxy_cache levels=1:2 keys_zone=content:20m inactive=10d max_size=2g;

    server {
        listen 8080;
        location @image_server_gm {
          content_by_lua_file "serve_image_gm.lua";
        }
        location @image_server_cv {
          content_by_lua_file "serve_image_cv.lua";
        }
        location ~ ^/images_gm/(?<sig>[^/]+)/(?<size>[^/]+)/(?<path>.*\.(?<ext>[a-z_]*))$ {
          root cache/gm;
          set_md5 $digest "$size/$path";
          try_files /$digest.$ext @image_server_gm;
        }
        location ~ ^/images_cv/(?<sig>[^/]+)/(?<size>[^/]+)/(?<path>.*\.(?<ext>[a-z_]*))$ {
          root cache/cv;
          set_md5 $digest "$size/$path";
          try_files /$digest.$ext @image_server_cv;
        }
        location ~ /bfs/(?<name>\d+_\d+)\.(?<oext>[a-z]+)_((?<width>\d+)x(?<height>\d+)\.(?<ext>[a-z]+))$ {
            proxy_cache content; # 根keys_zone后的内容对应  
            proxy_cache_valid 200 10d;   # 哪些状态缓存多长时间  
            proxy_cache_valid any 1m;    # 其他的缓存多长时间  
            proxy_cache_key bfs_thumb_${name}_${oext}_${width}_${height}_${ext};   # 通过key来hash，定义KEY的值  
            set $opath "/bfs/$name.$oext";
            content_by_lua_file "bfs_thumbnail_cv.lua";
        }
        location /bfs/ {
            # normal upstream
            # proxy_pass http://172.16.13.90:5154;
            root /var/projs/openresty;
        }
        location /test {
            content_by_lua '
                res = ngx.location.capture("/images_cv/LMzEhc_nPYwX/80x80/leafo.jpg")
                ngx.say(type(res.body))

                ';
        }
        location = /lua-version { 
            content_by_lua ' 
                    print(package.path)
                    if jit then 
                            ngx.say(jit.version) 
                        else 
                            ngx.say(_VERSION) 
                    end 
                '; 
        } 
    }
}
