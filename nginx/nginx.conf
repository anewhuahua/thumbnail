
#user  nobody;

error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#error_log stderr notice;
#pid        logs/nginx.pid;

daemon on;

events { 
    use epoll;
    worker_connections 30000;
}

worker_processes    8;
worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;

http {
    include /usr/local/openresty/nginx/conf/mime.types;
    lua_package_path "/data/thumbnail/nginx/lua/?.lua;;";
    lua_package_cpath "/data/thumbnail/lua-opencv/?.so;;";

    # access_log /dev/stdout;
    # rewrite_log on;

    proxy_cache_path /data/nginx/proxy_cache levels=1:2 keys_zone=content:20m inactive=10d max_size=2g;

    server {
        listen 8080;

        location ~ /bfs/(?<name>\d+_\d+)\.(?<oext>[a-z]+)_((?<width>\d+)x(?<height>\d+)\.(?<ext>[a-z]+))$ {
            proxy_cache content; # 根keys_zone后的内容对应  
            proxy_cache_valid 200 10d;   # 哪些状态缓存多长时间  
            proxy_cache_valid any 1m;    # 其他的缓存多长时间  
            proxy_cache_key bfs_thumb_${name}_${oext}_${width}_${height}_${ext};   # 通过key来hash，定义KEY的值  
            set $opath "/bfs/$name.$oext";
            content_by_lua_file "bfs_thumbnail_cv.lua";
        }

        location /bfs {
            # normal upstream
            # proxy_pass http://172.16.13.90:5154;
            alias /data/thumbnail/test/img/;
        }
        location /test {
            content_by_lua '
                res = ngx.location.capture("/bfs/miku.jpg")
                ngx.say(res.body)

                ';
        }
        location = /lua-version { 
            content_by_lua ' 
                    if jit then 
                            ngx.say(jit.version) 
                        else 
                            ngx.say(_VERSION) 
                    end 
                '; 
        } 
    }
}
